{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.scss","components/Navigation/MenuToggle/MenuToggle.module.scss","containers/Quiz/Quiz.module.scss","components/ActiveQuiz/ActiveQuiz.module.scss","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.scss","components/FinishedQuiz/FinishedQuiz.module.scss","components/UI/Button/Button.module.scss","components/UI/Loader/Loader.module.scss","containers/Auth/Auth.module.scss","components/UI/Input/Input.module.scss","hoc/Layout/Layout.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/ActiveQuiz/AnswersList/AnswersList.module.scss","containers/QuizList/QuizList.module.scss","containers/QuizCreator/QuizCreator.module.scss","components/UI/Select/Select.module.scss","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","axios/axios-quiz.js","store/actions/actionTypes.js","store/actions/quiz.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/UI/Input/Input.js","store/actions/auth.js","containers/Auth/Auth.js","components/UI/Select/Select.js","form/formFramework.js","hoc/Auxiliary/Auxiliary.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","components/Logout/Logout.js","App.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","serviceWorker.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","Drawer","clickHandler","onClose","links","map","link","index","to","exact","activeClassName","active","label","this","close","console","log","isAuthenticated","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","key","quiz","quizItem","length","onRetry","Loader","center","axios","create","baseURL","FETCH_QUIZES_START","FETCH_QUIZES_SUCCESS","FETCH_QUIZES_ERROR","FETCH_QUIZ_SUCCESS","QUIZ_SET_STATE","FINISH_QUIZ","QUIZ_NEXT_QUESTION","QUIZ_RETRY","CREATE_QUIZ_QUESTION","RESET_QUIZ_CREATION","AUTH_SUCCESS","AUTH_LOGOUT","fetchQuizSuccess","fetchQuizesStart","fetchQuizesSuccess","quizes","fetchQuizesError","e","error","quizSetState","answerState","quizAnswerClick","answerId","dispatch","getState","activeQuestion","rightAnswerId","timeout","window","setTimeout","number","isQuizFinished","clearTimeout","Quiz","fetchQuizById","match","params","retryQuiz","QuizWrapper","loading","isFinished","quizId","a","get","response","data","QuizList","name","fetchQuizes","renderQuizes","forEach","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","autoLogout","time","logout","localStorage","removeItem","authSuccess","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","isValid","trim","is","onSubmit","AuthForm","renderInputs","isLogin","authData","returnSecureToken","url","post","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","Select","options","option","createControl","config","validate","validateForm","hasOwnProperty","Auxiliary","createOptionControl","createFormControls","option1","option2","option3","option4","QuizCreator","sibmitHandler","addQuestionHandler","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","selectChangeHandler","select","renderControls","item","Logout","App","autoLogin","routes","path","component","withRouter","getItem","initialState","combineReducers","action","Boolean","location","hostname","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.81152663.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__3HfHL\",\"close\":\"Drawer_close__2mKKS\",\"active\":\"Drawer_active__37ZSO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__1Gba6\",\"open\":\"MenuToggle_open__anRlU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__1pt5E\",\"QuizWrapper\":\"Quiz_QuizWrapper__3Vb-h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__23NKa\",\"Question\":\"ActiveQuiz_Question__bRsNj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__156CW\",\"success\":\"AnswerItem_success__3AQC5\",\"error\":\"AnswerItem_error__3TkSM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__1TnBn\",\"success\":\"FinishedQuiz_success__1FAtU\",\"error\":\"FinishedQuiz_error__WoDGB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1U1y4\",\"error\":\"Button_error__3F9Tv\",\"success\":\"Button_success__1CGBq\",\"primary\":\"Button_primary__3xwN4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__2XtEQ\",\"lds-ripple\":\"Loader_lds-ripple__3RfFr\",\"center\":\"Loader_center__2zaWO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1SShl\",\"AuthForm\":\"Auth_AuthForm__2TElP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1M7Pf\",\"invalid\":\"Input_invalid__1DNF-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__1D2Xd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2WuIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__3f55h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__2PhnX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__qdGSS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__2L9CB\"};","import React from 'react'\nimport classes from './MenuToggle.module.scss'\n\nconst MenuToggle = (props) => {\n  const cls = [classes.MenuToggle, 'fa']\n\n  if (props.isOpen) {\n    cls.push('fa-times')\n    cls.push(classes.open)\n  } else {\n    cls.push('fa-bars')\n  }\n\n  return <i className={cls.join(' ')} onClick={props.onToggle} />\n}\n\nexport default MenuToggle\n","import React from 'react'\nimport classes from './Backdrop.module.scss'\n\nconst Backdrop = (props) => (\n  <div className={classes.Backdrop} onClick={props.onClick} />\n)\n\nexport default Backdrop\n","import React, { Component } from 'react'\nimport classes from './Drawer.module.scss'\nimport { NavLink } from 'react-router-dom'\nimport Backdrop from '../../UI/Backdrop/Backdrop'\n\nclass Drawer extends Component {\n  clickHandler = () => {\n    this.props.onClose()\n  }\n\n  renderLinks(links) {\n    return links.map((link, index) => {\n      return (\n        <li key={index}>\n          <NavLink\n            to={link.to}\n            exact={link.exact}\n            activeClassName={classes.active}\n            onClick={this.clickHandler}\n          >\n            {link.label}\n          </NavLink>\n        </li>\n      )\n    })\n  }\n\n  render() {\n    const cls = [classes.Drawer]\n\n    if (!this.props.isOpen) {\n      cls.push(classes.close)\n    }\n\n    const links = [{ to: '/', label: 'Список', exact: true }]\n\n    console.log('AUth', this.props.isAuthenticated)\n\n    if (this.props.isAuthenticated) {\n      links.push({ to: '/quiz-creator', label: 'Создать тест', exact: false })\n      links.push({ to: '/logout', label: 'Выйти', exact: false })\n    } else {\n      links.push({ to: '/auth', label: 'Авторизация', exact: false })\n    }\n\n    return (\n      <React.Fragment>\n        <nav className={cls.join(' ')}>\n          <ul>{this.renderLinks(links)}</ul>\n        </nav>\n        {this.props.isOpen ? <Backdrop onClick={this.props.onClose} /> : null}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Drawer\n","import React, { Component } from 'react'\nimport classes from './Layout.module.scss'\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\nimport Drawer from '../../components/Navigation/Drawer/Drawer'\nimport { connect } from 'react-redux'\n\nclass Layout extends Component {\n  state = {\n    menu: false,\n  }\n\n  toggleMenuHandler = () => {\n    this.setState({\n      menu: !this.state.menu,\n    })\n  }\n\n  menuCloseHandler = () => {\n    this.setState({\n      menu: false,\n    })\n  }\n\n  render() {\n    return (\n      <div className={classes.Layout}>\n        <Drawer\n          isOpen={this.state.menu}\n          onClose={this.menuCloseHandler}\n          isAuthenticated={this.props.isAuthenticated}\n        />\n        <MenuToggle\n          onToggle={this.toggleMenuHandler}\n          isOpen={this.state.menu}\n        />\n        <main>{this.props.children}</main>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.auth.token,\n  }\n}\n\nexport default connect(mapStateToProps)(Layout)\n","import React from 'react'\nimport classes from './AnswerItem.module.scss'\n\nconst AnswerItem = (props) => {\n  const cls = [classes.AnswerItem]\n\n  if (props.state) {\n    cls.push(classes[props.state])\n  }\n\n  return (\n    <li\n      className={cls.join(' ')}\n      onClick={() => props.onAnswerClick(props.answer.id)}\n    >\n      {props.answer.text}\n    </li>\n  )\n}\n\nexport default AnswerItem\n","import React from 'react'\nimport classes from './AnswersList.module.scss'\nimport AnswerItem from './AnswerItem/AnswerItem'\n\nconst AnswersList = (props) => {\n  return (\n    <ul className={classes.AnswersList}>\n      {props.answers.map((answer, index) => {\n        return (\n          <AnswerItem\n            key={index}\n            answer={answer}\n            onAnswerClick={props.onAnswerClick}\n            state={props.state ? props.state[answer.id] : null}\n          />\n        )\n      })}\n    </ul>\n  )\n}\n\nexport default AnswersList\n","import React from 'react'\nimport classes from './ActiveQuiz.module.scss'\nimport AnswersList from './AnswersList/AnswersList'\n\nconst ActiveQuiz = (props) => {\n  return (\n    <div className={classes.ActiveQuiz}>\n      <p className={classes.Question}>\n        <span>\n          <strong>{props.answerNumber}.</strong>&nbsp;\n          {props.question}\n        </span>\n        <small>\n          {props.answerNumber} из {props.quizLength}\n        </small>\n      </p>\n      <AnswersList\n        state={props.state}\n        answers={props.answers}\n        onAnswerClick={props.onAnswerClick}\n      />\n    </div>\n  )\n}\n\nexport default ActiveQuiz\n","import React from 'react'\nimport classes from './Button.module.scss'\n\nconst Button = (props) => {\n  const cls = [classes.Button, classes[props.type]]\n\n  return (\n    <button\n      onClick={props.onClick}\n      className={cls.join(' ')}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport classes from './FinishedQuiz.module.scss'\nimport Button from '../UI/Button/Button'\nimport { Link } from 'react-router-dom'\n\nconst FinishedQuiz = (props) => {\n  const successCount = Object.keys(props.results).reduce((total, key) => {\n    if (props.results[key] === 'success') {\n      total++\n    }\n\n    return total\n  }, 0)\n\n  return (\n    <div className={classes.FinishedQuiz}>\n      <ul>\n        {props.quiz.map((quizItem, index) => {\n          const cls = [\n            'fa',\n            props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\n            classes[props.results[quizItem.id]],\n          ]\n          return (\n            <li key={index}>\n              <strong>{index + 1}</strong>.&nbsp;\n              {quizItem.question}\n              <i className={cls.join(' ')} />\n            </li>\n          )\n        })}\n      </ul>\n      <p>\n        Правильно {successCount} из {props.quiz.length}\n      </p>\n      <div>\n        <Button onClick={props.onRetry} type='primary'>\n          Повторить\n        </Button>\n        <Link to='/'>\n          <Button type='success'>Перейти в список тестов</Button>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default FinishedQuiz\n","import React from 'react'\nimport classes from './Loader.module.scss'\n\nconst Loader = () => (\n  <div className={classes.center}>\n    <div className={classes.Loader}>\n      <div />\n      <div />\n    </div>\n  </div>\n)\n\nexport default Loader\n","import axios from 'axios'\n\nexport default axios.create({\n  baseURL: 'https://react-quiz-3e9b0.firebaseio.com/',\n})\n","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START'\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS'\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR'\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS'\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE'\nexport const FINISH_QUIZ = 'FINISH_QUIZ'\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION'\nexport const QUIZ_RETRY = 'QUIZ_RETRY'\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION'\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION'\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\n","import axios from '../../axios/axios-quiz'\nimport {\n  FETCH_QUIZ_SUCCESS,\n  FETCH_QUIZES_ERROR,\n  FETCH_QUIZES_START,\n  FETCH_QUIZES_SUCCESS,\n  FINISH_QUIZ,\n  QUIZ_NEXT_QUESTION,\n  QUIZ_RETRY,\n  QUIZ_SET_STATE,\n} from './actionTypes'\n\nexport function fetchQuizes() {\n  return async (dispatch) => {\n    dispatch(fetchQuizesStart())\n\n    try {\n      const response = await axios.get('/quizes.json')\n      const quizes = []\n\n      Object.keys(response.data).forEach((key, index) => {\n        quizes.push({\n          id: key,\n          name: `Тест №${index + 1}`,\n        })\n      })\n\n      dispatch(fetchQuizesSuccess(quizes))\n    } catch (e) {\n      dispatch(fetchQuizesError(e))\n    }\n  }\n}\n\nexport function fetchQuizById(quizId) {\n  return async (dispatch) => {\n    dispatch(fetchQuizesStart())\n\n    try {\n      const response = await axios.get(`/quizes/${quizId}.json`)\n      const quiz = response.data\n\n      dispatch(fetchQuizSuccess(quiz))\n    } catch (e) {\n      dispatch(fetchQuizesError(e))\n    }\n  }\n}\n\nexport function fetchQuizSuccess(quiz) {\n  return {\n    type: FETCH_QUIZ_SUCCESS,\n    quiz,\n  }\n}\n\nexport function fetchQuizesStart() {\n  return {\n    type: FETCH_QUIZES_START,\n  }\n}\n\nexport function fetchQuizesSuccess(quizes) {\n  return {\n    type: FETCH_QUIZES_SUCCESS,\n    quizes,\n  }\n}\n\nexport function fetchQuizesError(e) {\n  return {\n    type: FETCH_QUIZES_ERROR,\n    error: e,\n  }\n}\n\nexport function quizSetState(answerState, results) {\n  return {\n    type: QUIZ_SET_STATE,\n    answerState,\n    results,\n  }\n}\n\nexport function finishQuiz() {\n  return {\n    type: FINISH_QUIZ,\n  }\n}\n\nexport function quizNextQuestion(number) {\n  return {\n    type: QUIZ_NEXT_QUESTION,\n    number,\n  }\n}\n\nexport function retryQuiz() {\n  return {\n    type: QUIZ_RETRY,\n  }\n}\n\nexport function quizAnswerClick(answerId) {\n  return (dispatch, getState) => {\n    const state = getState().quiz\n\n    if (state.answerState) {\n      const key = Object.keys(state.answerState)[0]\n      if (state.answerState[key] === 'success') {\n        return\n      }\n    }\n\n    const question = state.quiz[state.activeQuestion]\n    const results = state.results\n\n    if (question.rightAnswerId === answerId) {\n      if (!results[question.id]) {\n        results[question.id] = 'success'\n      }\n\n      dispatch(quizSetState({ [answerId]: 'success' }, results))\n\n      const timeout = window.setTimeout(() => {\n        if (isQuizFinished(state)) {\n          dispatch(finishQuiz())\n        } else {\n          dispatch(quizNextQuestion(state.activeQuestion + 1))\n        }\n        window.clearTimeout(timeout)\n      }, 1000)\n    } else {\n      results[question.id] = 'error'\n      dispatch(quizSetState({ [answerId]: 'error' }, results))\n    }\n  }\n}\n\nfunction isQuizFinished(state) {\n  return state.activeQuestion + 1 === state.quiz.length\n}\n","import React, { Component } from 'react'\nimport classes from './Quiz.module.scss'\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\nimport Loader from '../../components/UI/Loader/Loader'\nimport { connect } from 'react-redux'\nimport {\n  fetchQuizById,\n  quizAnswerClick,\n  retryQuiz,\n} from '../../store/actions/quiz'\n\nclass Quiz extends Component {\n  componentDidMount() {\n    this.props.fetchQuizById(this.props.match.params.id)\n  }\n\n  componentWillUnmount() {\n    this.props.retryQuiz()\n  }\n\n  render() {\n    return (\n      <div className={classes.Quiz}>\n        <div className={classes.QuizWrapper}>\n          <h1>Ответьте на все вопросы</h1>\n          {this.props.loading || !this.props.quiz ? (\n            <Loader />\n          ) : this.props.isFinished ? (\n            <FinishedQuiz\n              results={this.props.results}\n              quiz={this.props.quiz}\n              onRetry={this.props.retryQuiz}\n            />\n          ) : (\n            <ActiveQuiz\n              answers={this.props.quiz[this.props.activeQuestion].answers}\n              question={this.props.quiz[this.props.activeQuestion].question}\n              onAnswerClick={this.props.quizAnswerClick}\n              quizLength={this.props.quiz.length}\n              answerNumber={this.props.activeQuestion + 1}\n              state={this.props.answerState}\n            />\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    results: state.quiz.results,\n    isFinished: state.quiz.isFinished,\n    activeQuestion: state.quiz.activeQuestion,\n    answerState: state.quiz.answerState,\n    quiz: state.quiz.quiz,\n    loading: state.quiz.loading,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchQuizById: (id) => dispatch(fetchQuizById(id)),\n    quizAnswerClick: (answerId) => dispatch(quizAnswerClick(answerId)),\n    retryQuiz: () => dispatch(retryQuiz()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)\n","import React, { Component } from 'react'\nimport classes from './QuizList.module.scss'\nimport { NavLink } from 'react-router-dom'\nimport Loader from '../../components/UI/Loader/Loader'\nimport { connect } from 'react-redux'\nimport { fetchQuizes } from '../../store/actions/quiz'\n\nclass QuizList extends Component {\n  renderQuizes() {\n    return this.props.quizes.map((quiz) => {\n      return (\n        <li key={quiz.id}>\n          <NavLink to={'/quiz/' + quiz.id}>{quiz.name}</NavLink>\n        </li>\n      )\n    })\n  }\n\n  componentDidMount() {\n    this.props.fetchQuizes()\n  }\n\n  render() {\n    return (\n      <div className={classes.QuizList}>\n        <div>\n          <h1>Список тестов</h1>\n          {this.props.loading && this.props.quizes.length !== 0 ? (\n            <Loader />\n          ) : (\n            <ul>{this.renderQuizes()}</ul>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    quizes: state.quiz.quizes,\n    loading: state.quiz.loading,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchQuizes: () => dispatch(fetchQuizes()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)\n","import React from 'react'\nimport classes from './Input.module.scss'\n\nfunction isInvalid({ valid, touched, shouldValidate }) {\n  return !valid && shouldValidate && touched\n}\n\nconst Input = (props) => {\n  const inputType = props.type || 'text'\n  const cls = [classes.Input]\n  const htmlFor = `${inputType}-${Math.random()}`\n\n  if (isInvalid(props)) {\n    cls.push(classes.invalid)\n  }\n\n  return (\n    <div className={cls.join(' ')}>\n      <label htmlFor={htmlFor}>{props.label}</label>\n      <input\n        type={inputType}\n        id={htmlFor}\n        value={props.value}\n        onChange={props.onChange}\n      />\n      {isInvalid(props) ? (\n        <span>{props.errorMessage || 'Введите верное значение'}</span>\n      ) : null}\n    </div>\n  )\n}\n\nexport default Input\n","import axios from 'axios'\nimport { AUTH_LOGOUT, AUTH_SUCCESS } from './actionTypes'\n\nexport function auth(email, password, isLogin) {\n  return async (dispatch) => {\n    const authData = {\n      email,\n      password,\n      returnSecureToken: true,\n    }\n\n    let url =\n      'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyBRj1R0UEHzbzdDaOOQIhjqWUvDsusN4Mo'\n\n    if (isLogin) {\n      url =\n        'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyBRj1R0UEHzbzdDaOOQIhjqWUvDsusN4Mo'\n    }\n\n    const response = await axios.post(url, authData)\n    const data = response.data\n    const expirationDate = new Date(\n      new Date().getTime() + data.expiresIn * 1000\n    )\n\n    localStorage.setItem('token', data.idToken)\n    localStorage.setItem('userId', data.localId)\n    localStorage.setItem('expirationDate', expirationDate)\n\n    dispatch(authSuccess(data.idToken))\n    dispatch(autoLogout(data.expiresIn))\n  }\n}\n\nexport function autoLogout(time) {\n  return (dispatch) => {\n    setTimeout(() => {\n      dispatch(logout())\n    }, time * 1000)\n  }\n}\n\nexport function logout() {\n  localStorage.removeItem('token')\n  localStorage.removeItem('userId')\n  localStorage.removeItem('expirationDate')\n\n  return {\n    type: AUTH_LOGOUT,\n  }\n}\n\nexport function autoLogin() {\n  return (dispatch) => {\n    const token = localStorage.getItem('token')\n    if (!token) {\n      dispatch(logout())\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'))\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout())\n      } else {\n        dispatch(authSuccess(token))\n\n        dispatch(\n          autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000)\n        )\n      }\n    }\n  }\n}\n\nexport function authSuccess(token) {\n  return {\n    type: AUTH_SUCCESS,\n    token,\n  }\n}\n","import React, { Component } from 'react'\nimport classes from './Auth.module.scss'\nimport Button from '../../components/UI/Button/Button'\nimport Input from '../../components/UI/Input/Input'\nimport is from 'is_js'\nimport { connect } from 'react-redux'\nimport { auth } from '../../store/actions/auth'\n\nclass Auth extends Component {\n  state = {\n    isFormValid: false,\n    formControls: {\n      email: {\n        value: '',\n        type: 'email',\n        label: 'Email',\n        errorMessage: 'Введите корректный email',\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          email: true,\n        },\n      },\n      password: {\n        value: '',\n        type: 'password',\n        label: 'Пароль',\n        errorMessage: 'Введите корректный пароль',\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n      },\n    },\n  }\n\n  loginHandler = () => {\n    this.props.auth(\n      this.state.formControls.email.value,\n      this.state.formControls.password.value,\n      true\n    )\n  }\n\n  registerHandler = () => {\n    this.props.auth(\n      this.state.formControls.email.value,\n      this.state.formControls.password.value,\n      false\n    )\n  }\n\n  submitHandler = (event) => {\n    event.preventDefault()\n  }\n\n  validateControl(value, validation) {\n    if (!validation) {\n      return true\n    }\n\n    let isValid = true\n\n    if (validation.required) {\n      isValid = value.trim() !== '' && isValid\n    }\n\n    if (validation.email) {\n      isValid = is.email(value) && isValid\n    }\n\n    if (validation.minLength) {\n      isValid = value.length >= validation.minLength && isValid\n    }\n\n    return isValid\n  }\n\n  onChangeHandler = (event, controlName) => {\n    const formControls = { ...this.state.formControls }\n    const control = { ...formControls[controlName] }\n\n    control.value = event.target.value\n    control.touched = true\n    control.valid = this.validateControl(control.value, control.validation)\n\n    formControls[controlName] = control\n\n    let isFormValid = true\n\n    Object.keys(formControls).forEach((name) => {\n      isFormValid = formControls[name].valid && isFormValid\n    })\n\n    this.setState({\n      formControls,\n      isFormValid,\n    })\n  }\n\n  renderInputs() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName]\n      return (\n        <Input\n          key={controlName + index}\n          type={control.type}\n          value={control.value}\n          valid={control.valid}\n          touched={control.touched}\n          label={control.label}\n          shouldValidate={!!control.validation}\n          errorMessage={control.errorMessage}\n          onChange={(event) => this.onChangeHandler(event, controlName)}\n        />\n      )\n    })\n  }\n\n  render() {\n    return (\n      <div className={classes.Auth}>\n        <div>\n          <h1>Авторизация</h1>\n\n          <form onSubmit={this.submitHandler} className={classes.AuthForm}>\n            {this.renderInputs()}\n\n            <Button\n              type='success'\n              onClick={this.loginHandler}\n              disabled={!this.state.isFormValid}\n            >\n              Войти\n            </Button>\n\n            <Button\n              type='primary'\n              onClick={this.registerHandler}\n              disabled={!this.state.isFormValid}\n            >\n              Зарегистрироваться\n            </Button>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    auth: (email, password, isLogin) =>\n      dispatch(auth(email, password, isLogin)),\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Auth)\n","import React from 'react'\nimport classes from './Select.module.scss'\n\nconst Select = (props) => {\n  const htmlFor = `${props.label}-${Math.random()}`\n\n  return (\n    <div className={classes.Select}>\n      <label htmlFor={htmlFor}>{props.label}</label>\n      <select id={htmlFor} value={props.value} onChange={props.onChange}>\n        {props.options.map((option, index) => {\n          return (\n            <option value={option.value} key={option.value + index}>\n              {option.text}\n            </option>\n          )\n        })}\n      </select>\n    </div>\n  )\n}\n\nexport default Select\n","export function createControl(config, validation) {\n  return {\n    ...config,\n    validation,\n    valid: !validation,\n    touched: false,\n    value: '',\n  }\n}\n\nexport function validate(value, validation = null) {\n  if (!validation) {\n    return true\n  }\n\n  let isValid = true\n\n  if (validation.required) {\n    isValid = value.trim() !== '' && isValid\n  }\n\n  return isValid\n}\n\nexport function validateForm(formControls) {\n  let isFormValid = true\n\n  for (let control in formControls) {\n    if (formControls.hasOwnProperty(control)) {\n      isFormValid = formControls[control].valid && isFormValid\n    }\n  }\n\n  return isFormValid\n}\n","const Auxiliary = (props) => props.children\n\nexport default Auxiliary\n","import React, { Component } from 'react'\nimport classes from './QuizCreator.module.scss'\nimport Button from '../../components/UI/Button/Button'\nimport Input from '../../components/UI/Input/Input'\nimport Select from '../../components/UI/Select/Select'\nimport { createControl, validate, validateForm } from '../../form/formFramework'\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary'\nimport { connect } from 'react-redux'\nimport {\n  createQuizQuestion,\n  finishCreateQuiz,\n} from '../../store/actions/create'\n\nfunction createOptionControl(number) {\n  return createControl(\n    {\n      label: `Вариант ${number}`,\n      errorMessage: 'Значение не может быть пустым',\n      id: number,\n    },\n    { required: true }\n  )\n}\n\nfunction createFormControls() {\n  return {\n    question: createControl(\n      {\n        label: 'Введите вопрос',\n        errorMessage: 'Вопрос не может быть пустым',\n      },\n      { required: true }\n    ),\n    option1: createOptionControl(1),\n    option2: createOptionControl(2),\n    option3: createOptionControl(3),\n    option4: createOptionControl(4),\n  }\n}\n\nclass QuizCreator extends Component {\n  state = {\n    isFormValid: false,\n    rightAnswerId: 1,\n    formControls: createFormControls(),\n  }\n\n  sibmitHandler = (event) => {\n    event.preventDefault()\n  }\n\n  addQuestionHandler = (event) => {\n    event.preventDefault()\n\n    const {\n      question,\n      option1,\n      option2,\n      option3,\n      option4,\n    } = this.state.formControls\n\n    const questionItem = {\n      question: question.value,\n      id: this.props.quiz.length + 1,\n      rightAnswerId: this.state.rightAnswerId,\n      answers: [\n        { text: option1.value, id: option1.id },\n        { text: option2.value, id: option2.id },\n        { text: option3.value, id: option3.id },\n        { text: option4.value, id: option4.id },\n      ],\n    }\n\n    this.props.createQuizQuestion(questionItem)\n\n    this.setState({\n      isFormValid: false,\n      rightAnswerId: 1,\n      formControls: createFormControls(),\n    })\n  }\n\n  createQuizHandler = (event) => {\n    event.preventDefault()\n\n    this.setState({\n      isFormValid: false,\n      rightAnswerId: 1,\n      formControls: createFormControls(),\n    })\n    this.props.finishCreateQuiz()\n  }\n\n  changeHandler = (value, controlName) => {\n    const formControls = { ...this.state.formControls }\n    const control = { ...formControls[controlName] }\n\n    control.touched = true\n    control.value = value\n    control.valid = validate(control.value, control.validation)\n\n    formControls[controlName] = control\n\n    this.setState({\n      formControls,\n      isFormValid: validateForm(formControls),\n    })\n  }\n\n  renderControls() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName]\n\n      return (\n        <Auxiliary key={controlName + index}>\n          <Input\n            label={control.label}\n            value={control.value}\n            valid={control.valid}\n            shouldValidate={!!control.validation}\n            touched={control.touched}\n            errorMessage={control.errorMessage}\n            onChange={(event) =>\n              this.changeHandler(event.target.value, controlName)\n            }\n          />\n          {index === 0 ? <hr /> : null}\n        </Auxiliary>\n      )\n    })\n  }\n\n  selectChangeHandler = (event) => {\n    this.setState({\n      rightAnswerId: +event.target.value,\n    })\n  }\n\n  render() {\n    const select = (\n      <Select\n        label='Выберите правильный ответ'\n        value={this.state.rightAnswerId}\n        onChange={this.selectChangeHandler}\n        options={[\n          { text: 1, value: 1 },\n          { text: 2, value: 2 },\n          { text: 3, value: 3 },\n          { text: 4, value: 4 },\n        ]}\n      />\n    )\n\n    return (\n      <div className={classes.QuizCreator}>\n        <div>\n          <h1>Создание теста</h1>\n\n          <form onSubmit={this.submitHandler}>\n            {this.renderControls()}\n\n            {select}\n\n            <Button\n              type='primary'\n              onClick={this.addQuestionHandler}\n              disabled={!this.state.isFormValid}\n            >\n              Добавить вопрос\n            </Button>\n\n            <Button\n              type='success'\n              onClick={this.createQuizHandler}\n              disabled={this.props.quiz.length === 0}\n            >\n              Создать тест\n            </Button>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    quiz: state.create.quiz,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    createQuizQuestion: (item) => dispatch(createQuizQuestion(item)),\n    finishCreateQuiz: () => dispatch(finishCreateQuiz()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator)\n","import { CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION } from './actionTypes'\nimport axios from '../../axios/axios-quiz'\n\nexport function createQuizQuestion(item) {\n  return {\n    type: CREATE_QUIZ_QUESTION,\n    item,\n  }\n}\n\nexport function resetQuizCreation() {\n  return {\n    type: RESET_QUIZ_CREATION,\n  }\n}\n\nexport function finishCreateQuiz() {\n  return async (dispatch, getState) => {\n    await axios.post('/quizes.json', getState().create.quiz)\n\n    dispatch(resetQuizCreation())\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { logout } from '../../store/actions/auth'\n\nclass Logout extends Component {\n  componentDidMount() {\n    this.props.logout()\n  }\n\n  render() {\n    return <Redirect to={'/'} />\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logout: () => dispatch(logout()),\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Logout)\n","import React, { Component } from 'react'\nimport Layout from './hoc/Layout/Layout'\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom'\nimport Quiz from './containers/Quiz/Quiz'\nimport QuizList from './containers/QuizList/QuizList'\nimport Auth from './containers/Auth/Auth'\nimport QuizCreator from './containers/QuizCreator/QuizCreator'\nimport { connect } from 'react-redux'\nimport Logout from './components/Logout/Logout'\nimport { autoLogin } from './store/actions/auth'\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.autoLogin()\n  }\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route path='/auth' component={Auth} />\n        <Route path='/quiz/:id' component={Quiz} />\n        <Route path='/' exact component={QuizList} />\n        <Redirect to='/' />\n      </Switch>\n    )\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path='/quiz-creator' component={QuizCreator} />\n          <Route path='/quiz/:id' component={Quiz} />\n          <Route path='/logout' component={Logout} />\n          <Route path='/' exact component={QuizList} />\n          <Redirect to='/' />\n        </Switch>\n      )\n    }\n\n    return <Layout>{routes}</Layout>\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.auth.token,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    autoLogin: () => dispatch(autoLogin()),\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App))\n","import {\n  FETCH_QUIZ_SUCCESS,\n  FETCH_QUIZES_ERROR,\n  FETCH_QUIZES_START,\n  FETCH_QUIZES_SUCCESS,\n  FINISH_QUIZ,\n  QUIZ_NEXT_QUESTION,\n  QUIZ_RETRY,\n  QUIZ_SET_STATE,\n} from '../actions/actionTypes'\n\nconst initialState = {\n  quizes: [],\n  loading: false,\n  error: null,\n  results: {},\n  isFinished: false,\n  activeQuestion: 0,\n  answerState: null,\n  quiz: null,\n}\n\nexport default function quizReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_QUIZES_START:\n      return {\n        ...state,\n        loading: true,\n      }\n    case FETCH_QUIZES_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        quizes: action.quizes,\n      }\n    case FETCH_QUIZES_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      }\n    case FETCH_QUIZ_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        quiz: action.quiz,\n      }\n    case QUIZ_SET_STATE:\n      return {\n        ...state,\n        answerState: action.answerState,\n        results: action.results,\n      }\n    case FINISH_QUIZ:\n      return {\n        ...state,\n        isFinished: true,\n      }\n    case QUIZ_NEXT_QUESTION:\n      return {\n        ...state,\n        answerState: null,\n        activeQuestion: action.number,\n      }\n    case QUIZ_RETRY:\n      return {\n        ...state,\n        activeQuestion: 0,\n        answerState: null,\n        isFinished: false,\n        results: {},\n      }\n    default:\n      return state\n  }\n}\n","import {\n  CREATE_QUIZ_QUESTION,\n  RESET_QUIZ_CREATION,\n} from '../actions/actionTypes'\n\nconst initialState = {\n  quiz: [],\n}\n\nexport default function createReducer(state = initialState, action) {\n  switch (action.type) {\n    case CREATE_QUIZ_QUESTION:\n      return {\n        ...state,\n        quiz: [...state.quiz, action.item],\n      }\n    case RESET_QUIZ_CREATION:\n      return {\n        ...state,\n        quiz: [],\n      }\n    default:\n      return state\n  }\n}\n","import { AUTH_LOGOUT, AUTH_SUCCESS } from '../actions/actionTypes'\n\nconst initialState = {\n  token: null,\n}\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case AUTH_SUCCESS:\n      return {\n        ...state,\n        token: action.token,\n      }\n    case AUTH_LOGOUT:\n      return {\n        ...state,\n        token: null,\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport quizReducer from './quiz'\nimport createReducer from './create'\nimport authReducer from './auth'\n\nexport default combineReducers({\n  quiz: quizReducer,\n  create: createReducer,\n  auth: authReducer,\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { createStore, compose, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport './index.module.scss'\nimport App from './App'\nimport rootReducer from './store/reducers/rootReducer'\nimport * as serviceWorker from './serviceWorker'\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}