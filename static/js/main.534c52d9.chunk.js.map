{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.scss","components/Navigation/MenuToggle/MenuToggle.module.scss","containers/Quiz/Quiz.module.scss","components/ActiveQuiz/ActiveQuiz.module.scss","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.scss","components/FinishedQuiz/FinishedQuiz.module.scss","components/UI/Button/Button.module.scss","components/UI/Loader/Loader.module.scss","containers/Auth/Auth.module.scss","components/UI/Input/Input.module.scss","hoc/Layout/Layout.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/ActiveQuiz/AnswersList/AnswersList.module.scss","containers/QuizList/QuizList.module.scss","containers/QuizCreator/QuizCreator.module.scss","components/UI/Select/Select.module.scss","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","axios/axios-quiz.js","store/actions/quiz.js","store/actions/actionTypes.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/UI/Input/Input.js","store/actions/auth.js","containers/Auth/Auth.js","components/UI/Select/Select.js","form/formFramework.js","hoc/Auxiliary/Auxiliary.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","components/Logout/Logout.js","App.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","serviceWorker.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","Drawer","clickHandler","onClose","links","map","link","index","key","to","exact","activeClassName","active","label","this","close","console","log","isAuthenticated","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","Loader","center","axios","create","baseURL","fetchQuizSuccess","fetchQuizesSuccess","quizes","fetchQuizesError","e","error","quizSetState","answerState","Quiz","fetchQuizById","match","params","retryQuiz","QuizWrapper","loading","isFinished","activeQuestion","quizAnswerClick","dispatch","quizId","a","get","response","data","answerId","getState","rightAnswerId","timeout","window","setTimeout","isQuizFinished","number","clearTimeout","QuizList","name","fetchQuizes","renderQuizes","forEach","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","autoLogout","time","logout","localStorage","removeItem","authSuccess","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","isValid","trim","is","onSubmit","AuthForm","renderInputs","isLogin","authData","returnSecureToken","url","post","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","Select","options","option","createControl","config","validate","validateForm","hasOwnProperty","Auxiliary","createOptionControl","createFormControls","option1","option2","option3","option4","QuizCreator","sibmitHandler","addQuestionHandler","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","selectChangeHandler","select","renderControls","item","Logout","App","autoLogin","routes","path","component","withRouter","getItem","initialState","combineReducers","action","Boolean","location","hostname","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.534c52d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__3OPsq\",\"close\":\"Drawer_close__KG2kc\",\"active\":\"Drawer_active__2Aogm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__26JL0\",\"open\":\"MenuToggle_open__bQYR_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__3ke4Z\",\"QuizWrapper\":\"Quiz_QuizWrapper__iWK8k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__2px4H\",\"Question\":\"ActiveQuiz_Question__37ejh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__3YfVf\",\"success\":\"AnswerItem_success__lQpXE\",\"error\":\"AnswerItem_error__2axvC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__3-Yrf\",\"success\":\"FinishedQuiz_success__FN33D\",\"error\":\"FinishedQuiz_error__jorO3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3_6OF\",\"error\":\"Button_error__gstpC\",\"success\":\"Button_success__1UJrn\",\"primary\":\"Button_primary__-iJDN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__2qY9y\",\"lds-ripple\":\"Loader_lds-ripple__110p1\",\"center\":\"Loader_center__ksZcg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__277eG\",\"AuthForm\":\"Auth_AuthForm__8rFpo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2r8Wb\",\"invalid\":\"Input_invalid__2lnum\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__1C4fY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__lIe7C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__1zqIU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__3stmj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__qKzvD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__1qqgm\"};","import React from 'react';\nimport classes from './MenuToggle.module.scss';\n\nconst MenuToggle = (props) => {\n  const cls = [classes.MenuToggle, 'fa'];\n\n  if (props.isOpen) {\n    cls.push('fa-times');\n    cls.push(classes.open);\n  } else {\n    cls.push('fa-bars');\n  }\n\n  return <i className={cls.join(' ')} onClick={props.onToggle} />;\n};\n\nexport default MenuToggle;\n","import React from 'react';\nimport classes from './Backdrop.module.scss';\n\nconst Backdrop = (props) => (\n  <div className={classes.Backdrop} onClick={props.onClick} />\n);\n\nexport default Backdrop;\n","import React, { Component } from 'react';\nimport classes from './Drawer.module.scss';\nimport { NavLink } from 'react-router-dom';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\n\nclass Drawer extends Component {\n  clickHandler = () => {\n    this.props.onClose();\n  };\n\n  renderLinks(links) {\n    return links.map((link, index) => {\n      return (\n        <li key={index}>\n          <NavLink\n            to={link.to}\n            exact={link.exact}\n            activeClassName={classes.active}\n            onClick={this.clickHandler}\n          >\n            {link.label}\n          </NavLink>\n        </li>\n      );\n    });\n  }\n\n  render() {\n    const cls = [classes.Drawer];\n\n    if (!this.props.isOpen) {\n      cls.push(classes.close);\n    }\n\n    const links = [{ to: '/', label: 'Список', exact: true }];\n\n    console.log('AUth', this.props.isAuthenticated);\n\n    if (this.props.isAuthenticated) {\n      links.push({ to: '/quiz-creator', label: 'Создать тест', exact: false });\n      links.push({ to: '/logout', label: 'Выйти', exact: false });\n    } else {\n      links.push({ to: '/auth', label: 'Авторизация', exact: false });\n    }\n\n    return (\n      <React.Fragment>\n        <nav className={cls.join(' ')}>\n          <ul>{this.renderLinks(links)}</ul>\n        </nav>\n        {this.props.isOpen ? <Backdrop onClick={this.props.onClose} /> : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Drawer;\n","import React, { Component } from 'react';\nimport classes from './Layout.module.scss';\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle';\nimport Drawer from '../../components/Navigation/Drawer/Drawer';\nimport { connect } from 'react-redux';\n\nclass Layout extends Component {\n  state = {\n    menu: false,\n  };\n\n  toggleMenuHandler = () => {\n    this.setState({\n      menu: !this.state.menu,\n    });\n  };\n\n  menuCloseHandler = () => {\n    this.setState({\n      menu: false,\n    });\n  };\n\n  render() {\n    return (\n      <div className={classes.Layout}>\n        <Drawer\n          isOpen={this.state.menu}\n          onClose={this.menuCloseHandler}\n          isAuthenticated={this.props.isAuthenticated}\n        />\n        <MenuToggle\n          onToggle={this.toggleMenuHandler}\n          isOpen={this.state.menu}\n        />\n        <main>{this.props.children}</main>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.auth.token,\n  };\n}\n\nexport default connect(mapStateToProps)(Layout);\n","import React from 'react';\nimport classes from './AnswerItem.module.scss';\n\nconst AnswerItem = (props) => {\n  const cls = [classes.AnswerItem];\n\n  if (props.state) {\n    cls.push(classes[props.state]);\n  }\n\n  return (\n    <li\n      className={cls.join(' ')}\n      onClick={() => props.onAnswerClick(props.answer.id)}\n    >\n      {props.answer.text}\n    </li>\n  );\n};\n\nexport default AnswerItem;\n","import React from 'react';\nimport classes from './AnswersList.module.scss';\nimport AnswerItem from './AnswerItem/AnswerItem';\n\nconst AnswersList = (props) => {\n  return (\n    <ul className={classes.AnswersList}>\n      {props.answers.map((answer, index) => {\n        return (\n          <AnswerItem\n            key={index}\n            answer={answer}\n            onAnswerClick={props.onAnswerClick}\n            state={props.state ? props.state[answer.id] : null}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default AnswersList;\n","import React from 'react';\nimport classes from './ActiveQuiz.module.scss';\nimport AnswersList from './AnswersList/AnswersList';\n\nconst ActiveQuiz = (props) => {\n  return (\n    <div className={classes.ActiveQuiz}>\n      <p className={classes.Question}>\n        <span>\n          <strong>{props.answerNumber}.</strong>&nbsp;\n          {props.question}\n        </span>\n        <small>\n          {props.answerNumber} из {props.quizLength}\n        </small>\n      </p>\n      <AnswersList\n        state={props.state}\n        answers={props.answers}\n        onAnswerClick={props.onAnswerClick}\n      />\n    </div>\n  );\n};\n\nexport default ActiveQuiz;\n","import React from 'react';\nimport classes from './Button.module.scss';\n\nconst Button = (props) => {\n  const cls = [classes.Button, classes[props.type]];\n\n  return (\n    <button\n      onClick={props.onClick}\n      className={cls.join(' ')}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport classes from './FinishedQuiz.module.scss';\nimport Button from '../UI/Button/Button';\nimport { Link } from 'react-router-dom';\n\nconst FinishedQuiz = (props) => {\n  const successCount = Object.keys(props.results).reduce((total, key) => {\n    if (props.results[key] === 'success') {\n      total++;\n    }\n\n    return total;\n  }, 0);\n\n  return (\n    <div className={classes.FinishedQuiz}>\n      <ul>\n        {props.quiz.map((quizItem, index) => {\n          const cls = [\n            'fa',\n            props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\n            classes[props.results[quizItem.id]],\n          ];\n          return (\n            <li key={index}>\n              <strong>{index + 1}</strong>.&nbsp;\n              {quizItem.question}\n              <i className={cls.join(' ')} />\n            </li>\n          );\n        })}\n      </ul>\n      <p>\n        Правильно {successCount} из {props.quiz.length}\n      </p>\n      <div>\n        <Button onClick={props.onRetry} type='primary'>\n          Повторить\n        </Button>\n        <Link to='/'>\n          <Button type='success'>Перейти в список тестов</Button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default FinishedQuiz;\n","import React from 'react';\nimport classes from './Loader.module.scss';\n\nconst Loader = (props) => (\n  <div className={classes.center}>\n    <div className={classes.Loader}>\n      <div />\n      <div />\n    </div>\n  </div>\n);\n\nexport default Loader;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://react-quiz-3e9b0.firebaseio.com/',\n});\n","import axios from '../../axios/axios-quiz';\nimport {\n  FETCH_QUIZ_SUCCESS,\n  FETCH_QUIZES_ERROR,\n  FETCH_QUIZES_START,\n  FETCH_QUIZES_SUCCESS,\n  FINISH_QUIZ,\n  QUIZ_NEXT_QUESTION,\n  QUIZ_RETRY,\n  QUIZ_SET_STATE,\n} from './actionTypes';\n\nexport function fetchQuizes() {\n  return async (dispatch) => {\n    dispatch(fetchQuizesStart());\n\n    try {\n      const response = await axios.get('/quizes.json');\n      const quizes = [];\n\n      Object.keys(response.data).forEach((key, index) => {\n        quizes.push({\n          id: key,\n          name: `Тест №${index + 1}`,\n        });\n      });\n\n      dispatch(fetchQuizesSuccess(quizes));\n    } catch (e) {\n      dispatch(fetchQuizesError(e));\n    }\n  };\n}\n\nexport function fetchQuizById(quizId) {\n  return async (dispatch) => {\n    dispatch(fetchQuizesStart());\n\n    try {\n      const response = await axios.get(`/quizes/${quizId}.json`);\n      const quiz = response.data;\n\n      dispatch(fetchQuizSuccess(quiz));\n    } catch (e) {\n      dispatch(fetchQuizesError(e));\n    }\n  };\n}\n\nexport function fetchQuizSuccess(quiz) {\n  return {\n    type: FETCH_QUIZ_SUCCESS,\n    quiz,\n  };\n}\n\nexport function fetchQuizesStart() {\n  return {\n    type: FETCH_QUIZES_START,\n  };\n}\n\nexport function fetchQuizesSuccess(quizes) {\n  return {\n    type: FETCH_QUIZES_SUCCESS,\n    quizes,\n  };\n}\n\nexport function fetchQuizesError(e) {\n  return {\n    type: FETCH_QUIZES_ERROR,\n    error: e,\n  };\n}\n\nexport function quizSetState(answerState, results) {\n  return {\n    type: QUIZ_SET_STATE,\n    answerState,\n    results,\n  };\n}\n\nexport function finishQuiz() {\n  return {\n    type: FINISH_QUIZ,\n  };\n}\n\nexport function quizNextQuestion(number) {\n  return {\n    type: QUIZ_NEXT_QUESTION,\n    number,\n  };\n}\n\nexport function retryQuiz() {\n  return {\n    type: QUIZ_RETRY,\n  };\n}\n\nexport function quizAnswerClick(answerId) {\n  return (dispatch, getState) => {\n    const state = getState().quiz;\n\n    if (state.answerState) {\n      const key = Object.keys(state.answerState)[0];\n      if (state.answerState[key] === 'success') {\n        return;\n      }\n    }\n\n    const question = state.quiz[state.activeQuestion];\n    const results = state.results;\n\n    if (question.rightAnswerId === answerId) {\n      if (!results[question.id]) {\n        results[question.id] = 'success';\n      }\n\n      dispatch(quizSetState({ [answerId]: 'success' }, results));\n\n      const timeout = window.setTimeout(() => {\n        if (isQuizFinished(state)) {\n          dispatch(finishQuiz());\n        } else {\n          dispatch(quizNextQuestion(state.activeQuestion + 1));\n        }\n        window.clearTimeout(timeout);\n      }, 1000);\n    } else {\n      results[question.id] = 'error';\n      dispatch(quizSetState({ [answerId]: 'error' }, results));\n    }\n  };\n}\n\nfunction isQuizFinished(state) {\n  return state.activeQuestion + 1 === state.quiz.length;\n}\n","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START';\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS';\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR';\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS';\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE';\nexport const FINISH_QUIZ = 'FINISH_QUIZ';\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION';\nexport const QUIZ_RETRY = 'QUIZ_RETRY';\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION';\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n","import React, { Component } from 'react';\nimport classes from './Quiz.module.scss';\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz';\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz';\nimport Loader from '../../components/UI/Loader/Loader';\nimport { connect } from 'react-redux';\nimport {\n  fetchQuizById,\n  quizAnswerClick,\n  retryQuiz,\n} from '../../store/actions/quiz';\n\nclass Quiz extends Component {\n  componentDidMount() {\n    this.props.fetchQuizById(this.props.match.params.id);\n  }\n\n  componentWillUnmount() {\n    this.props.retryQuiz();\n  }\n\n  render() {\n    return (\n      <div className={classes.Quiz}>\n        <div className={classes.QuizWrapper}>\n          <h1>Ответьте на все вопросы</h1>\n          {this.props.loading || !this.props.quiz ? (\n            <Loader />\n          ) : this.props.isFinished ? (\n            <FinishedQuiz\n              results={this.props.results}\n              quiz={this.props.quiz}\n              onRetry={this.props.retryQuiz}\n            />\n          ) : (\n            <ActiveQuiz\n              answers={this.props.quiz[this.props.activeQuestion].answers}\n              question={this.props.quiz[this.props.activeQuestion].question}\n              onAnswerClick={this.props.quizAnswerClick}\n              quizLength={this.props.quiz.length}\n              answerNumber={this.props.activeQuestion + 1}\n              state={this.props.answerState}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    results: state.quiz.results,\n    isFinished: state.quiz.isFinished,\n    activeQuestion: state.quiz.activeQuestion,\n    answerState: state.quiz.answerState,\n    quiz: state.quiz.quiz,\n    loading: state.quiz.loading,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchQuizById: (id) => dispatch(fetchQuizById(id)),\n    quizAnswerClick: (answerId) => dispatch(quizAnswerClick(answerId)),\n    retryQuiz: () => dispatch(retryQuiz()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);\n","import React, { Component } from 'react';\nimport classes from './QuizList.module.scss';\nimport { NavLink } from 'react-router-dom';\nimport Loader from '../../components/UI/Loader/Loader';\nimport { connect } from 'react-redux';\nimport { fetchQuizes } from '../../store/actions/quiz';\n\nclass QuizList extends Component {\n  renderQuizes() {\n    return this.props.quizes.map((quiz) => {\n      return (\n        <li key={quiz.id}>\n          <NavLink to={'/quiz/' + quiz.id}>{quiz.name}</NavLink>\n        </li>\n      );\n    });\n  }\n\n  componentDidMount() {\n    this.props.fetchQuizes();\n  }\n\n  render() {\n    return (\n      <div className={classes.QuizList}>\n        <div>\n          <h1>Список тестов</h1>\n          {this.props.loading && this.props.quizes.length !== 0 ? (\n            <Loader />\n          ) : (\n            <ul>{this.renderQuizes()}</ul>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    quizes: state.quiz.quizes,\n    loading: state.quiz.loading,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    fetchQuizes: () => dispatch(fetchQuizes()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList);\n","import React from 'react';\nimport classes from './Input.module.scss';\n\nfunction isInvalid({ valid, touched, shouldValidate }) {\n  return !valid && shouldValidate && touched;\n}\n\nconst Input = (props) => {\n  const inputType = props.type || 'text';\n  const cls = [classes.Input];\n  const htmlFor = `${inputType}-${Math.random()}`;\n\n  if (isInvalid(props)) {\n    cls.push(classes.invalid);\n  }\n\n  return (\n    <div className={cls.join(' ')}>\n      <label htmlFor={htmlFor}>{props.label}</label>\n      <input\n        type={inputType}\n        id={htmlFor}\n        value={props.value}\n        onChange={props.onChange}\n      />\n      {isInvalid(props) ? (\n        <span>{props.errorMessage || 'Введите верное значение'}</span>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Input;\n","import axios from 'axios';\nimport { AUTH_LOGOUT, AUTH_SUCCESS } from './actionTypes';\n\nexport function auth(email, password, isLogin) {\n  return async (dispatch) => {\n    const authData = {\n      email,\n      password,\n      returnSecureToken: true,\n    };\n\n    let url =\n      'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyBRj1R0UEHzbzdDaOOQIhjqWUvDsusN4Mo';\n\n    if (isLogin) {\n      url =\n        'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyBRj1R0UEHzbzdDaOOQIhjqWUvDsusN4Mo';\n    }\n\n    const response = await axios.post(url, authData);\n    const data = response.data;\n    const expirationDate = new Date(\n      new Date().getTime() + data.expiresIn * 1000\n    );\n\n    localStorage.setItem('token', data.idToken);\n    localStorage.setItem('userId', data.localId);\n    localStorage.setItem('expirationDate', expirationDate);\n\n    dispatch(authSuccess(data.idToken));\n    dispatch(autoLogout(data.expiresIn));\n  };\n}\n\nexport function autoLogout(time) {\n  return (dispatch) => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, time * 1000);\n  };\n}\n\nexport function logout() {\n  localStorage.removeItem('token');\n  localStorage.removeItem('userId');\n  localStorage.removeItem('expirationDate');\n\n  return {\n    type: AUTH_LOGOUT,\n  };\n}\n\nexport function autoLogin() {\n  return (dispatch) => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n\n        dispatch(\n          autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000)\n        );\n      }\n    }\n  };\n}\n\nexport function authSuccess(token) {\n  return {\n    type: AUTH_SUCCESS,\n    token,\n  };\n}\n","import React, { Component } from 'react';\nimport classes from './Auth.module.scss';\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport is from 'is_js';\nimport { connect } from 'react-redux';\nimport { auth } from '../../store/actions/auth';\n\nclass Auth extends Component {\n  state = {\n    isFormValid: false,\n    formControls: {\n      email: {\n        value: '',\n        type: 'email',\n        label: 'Email',\n        errorMessage: 'Введите корректный email',\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          email: true,\n        },\n      },\n      password: {\n        value: '',\n        type: 'password',\n        label: 'Пароль',\n        errorMessage: 'Введите корректный пароль',\n        valid: false,\n        touched: false,\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n      },\n    },\n  };\n\n  loginHandler = () => {\n    this.props.auth(\n      this.state.formControls.email.value,\n      this.state.formControls.password.value,\n      true\n    );\n  };\n\n  registerHandler = () => {\n    this.props.auth(\n      this.state.formControls.email.value,\n      this.state.formControls.password.value,\n      false\n    );\n  };\n\n  submitHandler = (event) => {\n    event.preventDefault();\n  };\n\n  validateControl(value, validation) {\n    if (!validation) {\n      return true;\n    }\n\n    let isValid = true;\n\n    if (validation.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (validation.email) {\n      isValid = is.email(value) && isValid;\n    }\n\n    if (validation.minLength) {\n      isValid = value.length >= validation.minLength && isValid;\n    }\n\n    return isValid;\n  }\n\n  onChangeHandler = (event, controlName) => {\n    const formControls = { ...this.state.formControls };\n    const control = { ...formControls[controlName] };\n\n    control.value = event.target.value;\n    control.touched = true;\n    control.valid = this.validateControl(control.value, control.validation);\n\n    formControls[controlName] = control;\n\n    let isFormValid = true;\n\n    Object.keys(formControls).forEach((name) => {\n      isFormValid = formControls[name].valid && isFormValid;\n    });\n\n    this.setState({\n      formControls,\n      isFormValid,\n    });\n  };\n\n  renderInputs() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return (\n        <Input\n          key={controlName + index}\n          type={control.type}\n          value={control.value}\n          valid={control.valid}\n          touched={control.touched}\n          label={control.label}\n          shouldValidate={!!control.validation}\n          errorMessage={control.errorMessage}\n          onChange={(event) => this.onChangeHandler(event, controlName)}\n        />\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div className={classes.Auth}>\n        <div>\n          <h1>Авторизация</h1>\n\n          <form onSubmit={this.submitHandler} className={classes.AuthForm}>\n            {this.renderInputs()}\n\n            <Button\n              type='success'\n              onClick={this.loginHandler}\n              disabled={!this.state.isFormValid}\n            >\n              Войти\n            </Button>\n\n            <Button\n              type='primary'\n              onClick={this.registerHandler}\n              disabled={!this.state.isFormValid}\n            >\n              Зарегистрироваться\n            </Button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    auth: (email, password, isLogin) =>\n      dispatch(auth(email, password, isLogin)),\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Auth);\n","import React from 'react';\nimport classes from './Select.module.scss';\n\nconst Select = (props) => {\n  const htmlFor = `${props.label}-${Math.random()}`;\n\n  return (\n    <div className={classes.Select}>\n      <label htmlFor={htmlFor}>{props.label}</label>\n      <select id={htmlFor} value={props.value} onChange={props.onChange}>\n        {props.options.map((option, index) => {\n          return (\n            <option value={option.value} key={option.value + index}>\n              {option.text}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n};\n\nexport default Select;\n","export function createControl(config, validation) {\n  return {\n    ...config,\n    validation,\n    valid: !validation,\n    touched: false,\n    value: '',\n  };\n}\n\nexport function validate(value, validation = null) {\n  if (!validation) {\n    return true;\n  }\n\n  let isValid = true;\n\n  if (validation.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n\n  return isValid;\n}\n\nexport function validateForm(formControls) {\n  let isFormValid = true;\n\n  for (let control in formControls) {\n    if (formControls.hasOwnProperty(control)) {\n      isFormValid = formControls[control].valid && isFormValid;\n    }\n  }\n\n  return isFormValid;\n}\n","const Auxiliary = (props) => props.children;\n\nexport default Auxiliary;\n","import React, { Component } from 'react';\nimport classes from './QuizCreator.module.scss';\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport Select from '../../components/UI/Select/Select';\nimport {\n  createControl,\n  validate,\n  validateForm,\n} from '../../form/formFramework';\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary';\nimport { connect } from 'react-redux';\nimport {\n  createQuizQuestion,\n  finishCreateQuiz,\n} from '../../store/actions/create';\n\nfunction createOptionControl(number) {\n  return createControl(\n    {\n      label: `Вариант ${number}`,\n      errorMessage: 'Значение не может быть пустым',\n      id: number,\n    },\n    { required: true }\n  );\n}\n\nfunction createFormControls() {\n  return {\n    question: createControl(\n      {\n        label: 'Введите вопрос',\n        errorMessage: 'Вопрос не может быть пустым',\n      },\n      { required: true }\n    ),\n    option1: createOptionControl(1),\n    option2: createOptionControl(2),\n    option3: createOptionControl(3),\n    option4: createOptionControl(4),\n  };\n}\n\nclass QuizCreator extends Component {\n  state = {\n    isFormValid: false,\n    rightAnswerId: 1,\n    formControls: createFormControls(),\n  };\n\n  sibmitHandler = (event) => {\n    event.preventDefault();\n  };\n\n  addQuestionHandler = (event) => {\n    event.preventDefault();\n\n    const {\n      question,\n      option1,\n      option2,\n      option3,\n      option4,\n    } = this.state.formControls;\n\n    const questionItem = {\n      question: question.value,\n      id: this.props.quiz.length + 1,\n      rightAnswerId: this.state.rightAnswerId,\n      answers: [\n        { text: option1.value, id: option1.id },\n        { text: option2.value, id: option2.id },\n        { text: option3.value, id: option3.id },\n        { text: option4.value, id: option4.id },\n      ],\n    };\n\n    this.props.createQuizQuestion(questionItem);\n\n    this.setState({\n      isFormValid: false,\n      rightAnswerId: 1,\n      formControls: createFormControls(),\n    });\n  };\n\n  createQuizHandler = (event) => {\n    event.preventDefault();\n\n    this.setState({\n      isFormValid: false,\n      rightAnswerId: 1,\n      formControls: createFormControls(),\n    });\n    this.props.finishCreateQuiz();\n  };\n\n  changeHandler = (value, controlName) => {\n    const formControls = { ...this.state.formControls };\n    const control = { ...formControls[controlName] };\n\n    control.touched = true;\n    control.value = value;\n    control.valid = validate(control.value, control.validation);\n\n    formControls[controlName] = control;\n\n    this.setState({\n      formControls,\n      isFormValid: validateForm(formControls),\n    });\n  };\n\n  renderControls() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n\n      return (\n        <Auxiliary key={controlName + index}>\n          <Input\n            label={control.label}\n            value={control.value}\n            valid={control.valid}\n            shouldValidate={!!control.validation}\n            touched={control.touched}\n            errorMessage={control.errorMessage}\n            onChange={(event) =>\n              this.changeHandler(event.target.value, controlName)\n            }\n          />\n          {index === 0 ? <hr /> : null}\n        </Auxiliary>\n      );\n    });\n  }\n\n  selectChangeHandler = (event) => {\n    this.setState({\n      rightAnswerId: +event.target.value,\n    });\n  };\n\n  render() {\n    const select = (\n      <Select\n        label='Выберите правильный ответ'\n        value={this.state.rightAnswerId}\n        onChange={this.selectChangeHandler}\n        options={[\n          { text: 1, value: 1 },\n          { text: 2, value: 2 },\n          { text: 3, value: 3 },\n          { text: 4, value: 4 },\n        ]}\n      />\n    );\n\n    return (\n      <div className={classes.QuizCreator}>\n        <div>\n          <h1>Создание теста</h1>\n\n          <form onSubmit={this.submitHandler}>\n            {this.renderControls()}\n\n            {select}\n\n            <Button\n              type='primary'\n              onClick={this.addQuestionHandler}\n              disabled={!this.state.isFormValid}\n            >\n              Добавить вопрос\n            </Button>\n\n            <Button\n              type='success'\n              onClick={this.createQuizHandler}\n              disabled={this.props.quiz.length === 0}\n            >\n              Создать тест\n            </Button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    quiz: state.create.quiz,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    createQuizQuestion: (item) => dispatch(createQuizQuestion(item)),\n    finishCreateQuiz: () => dispatch(finishCreateQuiz()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator);\n","import { CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION } from './actionTypes';\nimport axios from '../../axios/axios-quiz';\n\nexport function createQuizQuestion(item) {\n  return {\n    type: CREATE_QUIZ_QUESTION,\n    item,\n  };\n}\n\nexport function resetQuizCreation() {\n  return {\n    type: RESET_QUIZ_CREATION,\n  };\n}\n\nexport function finishCreateQuiz() {\n  return async (dispatch, getState) => {\n    await axios.post('/quizes.json', getState().create.quiz);\n\n    dispatch(resetQuizCreation());\n  };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { logout } from '../../store/actions/auth';\n\nclass Logout extends Component {\n  componentDidMount() {\n    this.props.logout();\n  }\n\n  render() {\n    return <Redirect to={'/'} />;\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    logout: () => dispatch(logout()),\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Logout);\n","import React, { Component } from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport Quiz from './containers/Quiz/Quiz';\nimport QuizList from './containers/QuizList/QuizList';\nimport Auth from './containers/Auth/Auth';\nimport QuizCreator from './containers/QuizCreator/QuizCreator';\nimport { connect } from 'react-redux';\nimport Logout from './components/Logout/Logout';\nimport { autoLogin } from './store/actions/auth';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.autoLogin();\n  }\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route path='/auth' component={Auth} />\n        <Route path='/quiz/:id' component={Quiz} />\n        <Route path='/' exact component={QuizList} />\n        <Redirect to='/' />\n      </Switch>\n    );\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path='/quiz-creator' component={QuizCreator} />\n          <Route path='/quiz/:id' component={Quiz} />\n          <Route path='/logout' component={Logout} />\n          <Route path='/' exact component={QuizList} />\n          <Redirect to='/' />\n        </Switch>\n      );\n    }\n\n    return <Layout>{routes}</Layout>;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.auth.token,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    autoLogin: () => dispatch(autoLogin()),\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","import {\n  FETCH_QUIZ_SUCCESS,\n  FETCH_QUIZES_ERROR,\n  FETCH_QUIZES_START,\n  FETCH_QUIZES_SUCCESS,\n  FINISH_QUIZ,\n  QUIZ_NEXT_QUESTION,\n  QUIZ_RETRY,\n  QUIZ_SET_STATE,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  quizes: [],\n  loading: false,\n  error: null,\n  results: {},\n  isFinished: false,\n  activeQuestion: 0,\n  answerState: null,\n  quiz: null,\n};\n\nexport default function quizReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_QUIZES_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case FETCH_QUIZES_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        quizes: action.quizes,\n      };\n    case FETCH_QUIZES_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    case FETCH_QUIZ_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        quiz: action.quiz,\n      };\n    case QUIZ_SET_STATE:\n      return {\n        ...state,\n        answerState: action.answerState,\n        results: action.results,\n      };\n    case FINISH_QUIZ:\n      return {\n        ...state,\n        isFinished: true,\n      };\n    case QUIZ_NEXT_QUESTION:\n      return {\n        ...state,\n        answerState: null,\n        activeQuestion: action.number,\n      };\n    case QUIZ_RETRY:\n      return {\n        ...state,\n        activeQuestion: 0,\n        answerState: null,\n        isFinished: false,\n        results: {},\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  CREATE_QUIZ_QUESTION,\n  RESET_QUIZ_CREATION,\n} from '../actions/actionTypes';\n\nconst initialState = {\n  quiz: [],\n};\n\nexport default function createReducer(state = initialState, action) {\n  switch (action.type) {\n    case CREATE_QUIZ_QUESTION:\n      return {\n        ...state,\n        quiz: [...state.quiz, action.item],\n      };\n    case RESET_QUIZ_CREATION:\n      return {\n        ...state,\n        quiz: [],\n      };\n    default:\n      return state;\n  }\n}\n","import { AUTH_LOGOUT, AUTH_SUCCESS } from '../actions/actionTypes';\n\nconst initialState = {\n  token: null,\n};\n\nexport default function authReducer(state = initialState, action) {\n  switch (action.type) {\n    case AUTH_SUCCESS:\n      return {\n        ...state,\n        token: action.token,\n      };\n    case AUTH_LOGOUT:\n      return {\n        ...state,\n        token: null,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport quizReducer from './quiz';\nimport createReducer from './create';\nimport authReducer from './auth';\n\nexport default combineReducers({\n  quiz: quizReducer,\n  create: createReducer,\n  auth: authReducer,\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport './index.module.scss';\nimport App from './App';\nimport rootReducer from './store/reducers/rootReducer';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}